.\" The following commands are required for all man pages.
.Dd April 14 2021
.Dt HSH 1 SMM
.Os Ubuntu_Linux 14.04

.Sh NAME
.Nm hsh
.Nd command interpreter (simple shell)
.\" This next command is for sections 2 and 3 only.
.\" .Sh LIBRARY

.Sh SYNOPSIS
.Nm hsh
.\" Op file_name

.Sh DESCRIPTION
.Nm
is a simplified clone of the standard command interpreter for the system. (See
.Xr sh 1 ) .

.Ss Overview
The shell is a command that reads lines
.\" from either a file or the
from the terminal, interprets them, and generally executes other commands.
Commands can be typed directly to the running shell or can be piped in via the
standard input from other commands.
\" put into a file and
\" the file can be executed directly by the shell.

.Ss Invocation
If the standard input of the shell is connected to a terminal, the shell is
considered an interactive shell.
An interactive shell generally prompts before each command and handles
programming and command errors differently (as described below).
If the environment variable
.Ev ENV
is set on entry to an interactive shell, the shell next reads
commands from the file named in
.Ev ENV .

.Pp
A non-interactive shell, on the other hand, is considered when the standard input
of the shell is feed as a redirection or a pipe from another program. In this mode, no
prompt is displayed, but the commands fed will be executed nonetheless.

.Ss Lexical Structure
The shell reads input in terms of lines from a file and breaks it up into
words at whitespace (blanks and tabs), and at \*[Lt]newline\*[Gt].
\" and at certain sequences of
\" characters that are special to the shell called
\" .Dq operators .
\" There are two types of operators: control operators and redirection
\" operators (their meaning is discussed later).
\" Following is a list of operators:
\" .Bl -ohang -offset indent
\" .It "Control operators:"
\" .Dl &  &&  \&(  \&)  \&;  ;; | || \*[Lt]newline\*[Gt]
\" .It "Redirection operators:"
\" .Dl \*[Lt]  \*[Gt]  \*[Gt]|  \*[Lt]\*[Lt]  \*[Gt]\*[Gt]  \*[Lt]&  \*[Gt]&  \*[Lt]\*[Lt]-  \*[Lt]\*[Gt]
\" .El

\" .Ss Aliases
\" An alias is a name and corresponding value set using the
\" .Xr alias 1
\" builtin command.
\" Whenever a reserved word may occur (see above),
\" and after checking for reserved words, the shell
\" checks the word to see if it matches an alias.
\" If it does, it replaces it in the input stream with its value.
\" For example, if there is an alias called
\" .Dq lf
\" with the value
\" .Dq "ls -F" ,
\" then the input:
\" .Pp
\" .Dl lf foobar Aq return
\" .Pp
\" would become
\" .Pp
\" .Dl ls -F foobar Aq return
\" .Pp
\" Aliases provide a convenient way for naive users to create shorthands for
\" commands without having to learn how to create functions with arguments.
\" They can also be used to create lexically obscure code.
\" This use is discouraged.

.Ss Commands
If a line is read and if the first word of the line (or after a control operator) is not a reserved word,
then the shell has recognized a simple command.

.Ss Search and Execution
There are two types of commands: builtin commands, and norrmal programs
-- and the command is searched for (by name) in that order.
They each are executed in a different way.
.Pp
Shell builtins are executed internally to the shell, without spawning a
new process.
.Pp
Otherwise, if the command's name doesn't match a builtin, the
command is searched for as a normal program in the file system (as
described in the next section).
When a normal program is executed, the shell runs the program,
passing the arguments and the environment to the program in a child process.

.Ss Path Search
When locating a command, the shell first looks to see if it has a shell
function by that name.
Then it looks for a builtin command by that name.
If a builtin command is not found, one of two things happen:
.Bl -enum
.It
Command names containing a slash are simply executed without performing
any searches.
.It
The shell searches each entry in
.Ev PATH
in turn for the command.
The value of the
.Ev PATH
variable should be a series of entries separated by colons.
Each entry consists of a directory name.
The current directory may be indicated
implicitly by an empty directory name, or explicitly by a single period.
.El

.Ss Command Exit Status
Each command has an exit status that can influence the behaviour
of other shell commands.
The paradigm is that a command exits
with zero for normal or success, and non-zero for failure,
error, or a false indication.
The man page for each command
should indicate the various exit codes and what they mean.
Additionally, the builtin commands return exit codes, as does
an executed shell function.
.Pp
If a command consists entirely of variable assignments then the
exit status of the command is that of the last command substitution
if any, otherwise 0.

\" .Ss Short-Circuit List Operators
\" .Dq &&
\" and
\" .Dq ||
\" are AND-OR list operators.
\" .Dq &&
\" executes the first command, and then executes the second command iff the
\" exit status of the first command is zero.
\" .Dq ||
\" is similar, but executes the second command iff the exit status of the first
\" command is nonzero.
\" .Dq &&
\" and
\" .Dq ||
\" both have the same priority.

.Ss Builtins
This section lists the builtin commands which are builtin because they
need to perform some operation that can't be performed by a separate
process.
.Bl -tag -width 5n

\" .It alias Op Ar name Ns Op Ar "=string ..."
\" If
\" .Ar name=string
\" is specified, the shell defines the alias
\" .Ar name
\" with value
\" .Ar string .
\" If just
\" .Ar name
\" is specified, the value of the alias
\" .Ar name
\" is printed.
\" With no arguments, the
\" .Ic alias
\" builtin prints the
\" names and values of all defined aliases.

\" .It cd Ar -
\" .It Xo cd Op Fl LP
\" .Op Ar directory
\" .Xc
\" Switch to the specified directory (default
\" .Ev HOME ) .
\" If an entry for
\" .Ev CDPATH
\" appears in the environment of the
\" .Ic cd
\" command or the shell variable
\" .Ev CDPATH
\" is set and the directory name does not begin with a slash, then the
\" directories listed in
\" .Ev CDPATH
\" will be searched for the specified directory.
\" The format of
\" .Ev CDPATH
\" is the same as that of
\" .Ev PATH .
\" If a single dash is specified as the argument, it will be replaced by the
\" value of
\" .Ev OLDPWD .
\" The
\" .Ic cd
\" command will print out the name of the
\" directory that it actually switched to if this is different from the name
\" that the user gave.
\" These may be different either because the
\" .Ev CDPATH
\" anism was used or because the argument is a single dash.
\" The
\" .Fl P
\" option causes the physical directory structure to be used, that is, all
\" symbolic links are resolved to their respective values.  The
\" .Fl L
\" option turns off the effect of any preceding
\" .Fl P
\" options.

.It env
Prints all the environment variables.

.It exit Op Ar exitstatus
Terminate the shell process.
If
.Ar exitstatus
is given it is used as the exit status of the shell; otherwise the
exit status of the preceding command is used.

.It help Op Ar builtin
Displays a short description of
.Ar builtin .
If no
.Ar builtin
is given, then no description will be printed and 1 will be returned.

.It unsetenv Op Ar variablename
Deletes
.Ar variablename
from the environment.
If
.Ar variablename
doesn't exist, returns 1.

.It setenv Op Ar variablename Ar variablevalue
Adds
.Ar variablename
with
.Ar variablevalue
to the environment.
If either
.Ar variablename
or
.Ar variablevalue
are not given, the variable will not be set and its return status will be 1.

.Sh EXIT STATUS
Errors that are detected by the shell, such as a syntax error, will cause the
shell to exit with a non-zero exit status.
If the shell is not an
interactive shell, the execution of the shell file will be aborted.
Otherwise
the shell will return the exit status of the last command executed.
\" or
\" if the exit builtin is used with a numeric argument, it will return the
\" argument.

\" .Sh ENVIRONMENT
\" .Bl -tag -width MAILCHECK
\" .It Ev HOME
\" Set automatically by
\" .Xr login 1
\" from the user's login directory in the password file
\" .Pq Xr passwd 4 .
\" This environment variable also functions as the default argument for the
\" cd builtin.
\" .It Ev PATH
\" The default search path for executables.
\" See the above section
\" .Sx Path Search .
\" .It Ev CDPATH
\" The search path used with the cd builtin.
\" .It Ev MAIL
\" The name of a mail file, that will be checked for the arrival of new mail.
\" Overridden by
\" .Ev MAILPATH .
\" .It Ev MAILCHECK
\" The frequency in seconds that the shell checks for the arrival of mail
\" in the files specified by the
\" .Ev MAILPATH
\" or the
\" .Ev MAIL
\" file.
\" If set to 0, the check will occur at each prompt.
\" .It Ev MAILPATH
\" A colon
\" .Dq \&:
\" separated list of file names, for the shell to check for incoming mail.
\" This environment setting overrides the
\" .Ev MAIL
\" setting.
\" There is a maximum of 10 mailboxes that can be monitored at once.
\" .It Ev PS1
\" The primary prompt string, which defaults to
\" .Dq $\  ,
\" unless you are the superuser, in which case it defaults to
\" .Dq #\  .
\" .It Ev PS2
\" The secondary prompt string, which defaults to
\" .Dq \*[Gt]\  .
\" .It Ev PS4
\" Output before each line when execution trace (set -x) is enabled,
\" defaults to
\" .Dq +\  .
\" .It Ev IFS
\" Input Field Separators.
\" This is normally set to
\" .Aq space ,
\" .Aq tab ,
\" and
\" .Aq newline .
\" See the
\" .Sx White Space Splitting
\" section for more details.
\" .It Ev TERM
\" The default terminal setting for the shell.
\" This is inherited by
\" children of the shell, and is used in the history editing modes.
\" .It Ev HISTSIZE
\" The number of lines in the history buffer for the shell.
\" .It Ev PWD
\" The logical value of the current working directory.  This is set by the
\" .Ic cd
\" command.
\" .It Ev OLDPWD
\" The previous logical value of the current working directory.  This is set by
\" the
\" .Ic cd
\" command.
\" .It Ev PPID
\" The process ID of the parent process of the shell.
\" .El

.Sh EXAMPLES
A general view of the operation of the shell in interactive mode:
.Pp
.D1
$ ./hsh
.D1
#cisfun$
.Op COMMAND 
.Op ARGUMENTS
.D1
 ...
.D1
#cisfun$ exit
.D1
$
.Pp
And in non-interactive mode:
.Pp
.D1
$ echo
.Op COMMAND
.Op ARGUMENTS
| ./hsh
.D1
 ...
.D1
$

An example of the shell in interactive mode. Listing all files in the current directory:
.Pp
.D1
$ ./hsh
.D1
#cisfun$ ls
.D1
lslist.c  memory.c  README.md  test  builtins_2.c  ...
.D1
#cisfun$ exit
.D1
$

.Pp
The same example in non-interactive mode:
.Pp
.D1
$ echo "ls" | ./hsh
.D1
lslist.c  memory.c  README.md  test  builtins_2.c  ...


.Sh AUTHORS
Joel Alexander Ramírez Núñez
.An
- Alfredo Delgado Moreno

.Sh BUGS
According to the checker, in the PATH mandatory task there's 1 bug.

.\" ============================================================================================
.\" The following commands should be uncommented and
.\" used where appropriate.
.\" .Sh IMPLEMENTATION NOTES
.\" This next command is for sections 2, 3, and 9 only
.\"     (function return values).
.\" .Sh RETURN VALUES
.\" This next command is for sections 1, 6, 7, and 8 only.
.\" .Sh ENVIRONMENT
.\" .Sh FILES
.\" This next command is for sections 1, 6, and 8 only
.\"     (command return values to the shell).
.\" .Sh EXIT STATUS
.\" .Sh EXAMPLES
.\" This next command is for sections 1, 4, 6, 7, 8, and 9 only
.\"     (fprintf/stderr type diagnostics).
.\" .Sh DIAGNOSTICS
.\" .Sh COMPATIBILITY
.\" This next command is for sections 2, 3, 4, and 9 only
.\"     (settings of the errno variable).
.\" .Sh ERRORS
.\" .Sh SEE ALSO
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh CAVEATS
.\" .Sh BUGS